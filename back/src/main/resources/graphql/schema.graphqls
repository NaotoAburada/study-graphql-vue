type Query {
  getAuthorById(id: ID!): Author
  getAuthorByName(name: String!): [Author]
  getAuthorByMultiConditions(id: ID, name: String): [Author]
  getBlogList: [Blog]
  getBlogById(id: ID!): Blog
}

type Author {
  id: ID!
  name: String!
  books: [Book]
}

type Book {
  id: ID!
  name: String!
}

type Blog {
  id: ID!
  title: String!
  overview: String!
  postDate: String!
  blogBody: String!
  comments: [Comment]
}

type Comment {
  id: ID!
  name: String!
  comment: String!
  postDate: String!
}

type Mutation {
  registAuthor(name: String!): RegistAuthorResponse
  registBook(authorId: ID!, name: String!): RegistBookResponse
}

type RegistAuthorResponse {
  name: String!
  isRegist: Boolean!
  errorMessage: String
}

type RegistBookResponse {
  authorId: ID!
  name: String!
  isRegist: Boolean!
  errorMessage: String
}
